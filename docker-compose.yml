version: '2'
services:
  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      # называется nginx.conf, чтобы использовать плугин nginx.vim
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      # контейнер nginx запустится только после запуска этих контейнеров,
      # иначе сразу остановится
      #- server
      - webapp
  # клиентское приложение
  webapp:
    # создавать файлы от имени этого пользователя, он владелец
    user: ${UID_VAR}:${GID_VAR}
    image: node
    # создать рабочую директорию
    working_dir: /app
    volumes:
    # npm-cache - именованный том, внутри докер окружения, где будет лежать кэш npm
    # можно увидеть в списке через команду docker volume ls
      - npm-cache:/root/.npm
      - ./client:/app
    # запустить скрипт из package.json
    command: npm run start
  # серверный рендеринг
  ssr:
    # переменные среды
    environment:
      # для запуска серверного рендеринга указываем ему адрес клиентского приложения в внутри docker network
      CRA_SERVICE_NAME: webapp
      CRA_CLIENT_PORT: 3000
      SSR_SERVER_PORT: 3001
    # создавать файлы от имени этого пользователя, он владелец
    user: ${UID_VAR}:${GID_VAR}
    image: node
    # создать рабочую директорию
    working_dir: /app
    volumes:
    # npm-cache - именованный том, внутри докер окружения, где будет лежать кэш npm
    # можно увидеть в списке через команду docker volume ls
      - npm-cache:/root/.npm
      - ./client:/app
    # запустить скрипт из package.json
    command: npm run ssr-start
    depends_on:
      - webapp
  # серверное приложение с api
  server:
    user: ${UID_VAR}:${GID_VAR}
    # собрать образ из Dokerfile, который лежит в папке /server
    build: server
    working_dir: /app
    volumes:
      - npm-cache:/root/.npm
      - ./server:/app
    command: npm run start
  db:
      image: mysql:5.7
      volumes:
      # mysql_data - именованный том, здесь хранится база данных
        - mysql_data:/var/lib/mysql
        - ./docker/mysql/config.cnf:/etc/mysql/conf.d/config.cnf
      environment:
        # переменные из .env, нужны для автоматического создания базы
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
  phpmyadmin:
        image: phpmyadmin/phpmyadmin
        ports:
          # доступность по данному порту
          - 8183:80
        links:
          - db
volumes:
  mysql_data:
  npm-cache:
